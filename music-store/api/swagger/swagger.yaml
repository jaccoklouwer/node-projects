swagger: "2.0"
info:
  version: "0.0.1"
  title: MVC Music Store
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /Album:
    x-swagger-router-controller: album
    get:
      description: get all albums
      operationId: getAllAlbums
      tags:
        - album
      responses:
        '200':
          description: Succes
          schema:
            items:
              $ref: "#/definitions/Album"
        '404':
          description: Not found
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Create a new Album
      operationId: createAlbum
      parameters:
        - in: body
          name: album
          description: the album to create
          required: true
          schema:
            $ref: '#/definitions/Album'
      tags:
        - album
      responses:
        '201':
          description: created
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /Album/{id}:
    x-swagger-router-controller: album
    parameters:
      - name: id
        type: string
        in: path
        required: true
    get:
      description: Get one Album by id
      operationId: getAlbumById
      tags:
        - album
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Album'
        '404':
          description: Not Found
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: update an Album
      operationId: UpdateAlbum
      parameters:
        - name: album
          in: body
          required: true
          schema:
            $ref: '#/definitions/Album'
      tags:
        - album
      responses:
        '200':
          description: OK
    delete:
      description: Delete a Album
      operationId: deleteAlbum
      tags:
        - album
      responses:
        '200':
          description: OK
  /Artiest:
    x-swagger-router-controller: artiest
    get:
      description: get all artiests
      operationId: getAllArtiests
      tags:
        - artiest
      responses:
        '200':
          description: Succes
          schema:
            items:
              $ref: "#/definitions/Artiest"
        '404':
          description: Not found
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Create a new Artiest
      operationId: createArtiest
      parameters:
        - in: body
          name: artiest
          description: the artiest to create
          required: true
          schema:
            $ref: '#/definitions/Artiest'
      tags:
        - artiest
      responses:
        '201':
          description: created
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /Artiest/{id}:
    x-swagger-router-controller: artiest
    parameters:
      - name: id
        type: string
        in: path
        required: true
    get:
      description: Get one Artiest by id
      operationId: getArtiestById
      tags:
        - artiest
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Artiest'
        '404':
          description: Not Found
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: update an Artiest
      operationId: UpdateArtiest
      tags:
        - artiest
      responses:
        '200':
          description: OK
    delete:
      description: Delete a Artiest
      operationId: deleteArtiest
      tags:
        - artiest
      responses:
        '200':
          description: OK
  /Genre:
    x-swagger-router-controller: genre
    get:
      description: get all artiests
      operationId: getAllGenres
      tags:
        - genre
      responses:
        '200':
          description: Succes
          schema:
            items:
              $ref: "#/definitions/Genre"
        '404':
          description: Not found
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Create a new Genre
      operationId: createGenre
      parameters:
        - in: body
          name: genre
          description: the genre to create
          required: true
          schema:
            $ref: '#/definitions/Genre'
      tags:
        - genre
      responses:
        '201':
          description: created
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /Genre/{id}:
    x-swagger-router-controller: genre
    parameters:
      - name: id
        type: string
        in: path
        required: true
    get:
      description: Get one Genre by id
      operationId: getGenreById
      tags:
        - genre
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Genre'
        '404':
          description: Not Found
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: update an Genre
      operationId: UpdateGenre
      tags:
        - genre
      responses:
        '200':
          description: OK
    delete:
      description: Delete a Genre
      operationId: deleteGenre
      tags:
        - genre
      responses:
        '200':
          description: OK
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  Album:
    type: object
    properties:
      id:
        type: string
      Title:
        type: string
      Price:
        type: number
      albumUrl:
        type: string
      Artiest:
        $ref: "#/definitions/Artiest"
      Genre:
        $ref: "#/definitions/Genre"
  Artiest:
    type: object
    properties:
      id:
        type: string
      Name:
        type: string
  Genre:
    type: object
    properties:
      id:
        type: string
      Name:
        type: string
      Description:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string